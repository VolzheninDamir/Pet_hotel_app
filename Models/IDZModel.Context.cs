//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IDZ_WEB.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class IDZEntities1 : DbContext
    {
        public IDZEntities1()
            : base("name=IDZEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Booking> Bookings { get; set; }
        public virtual DbSet<Owner> Owners { get; set; }
        public virtual DbSet<Payment> Payments { get; set; }
        public virtual DbSet<Pet> Pets { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<Room> Rooms { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<Booking1> Bookings1 { get; set; }
    
        public virtual int CreateBooking(string ownerFirstName, string ownerLastName, string petName, Nullable<System.DateTime> checkinDate, Nullable<System.DateTime> checkoutDate, Nullable<int> roomID)
        {
            var ownerFirstNameParameter = ownerFirstName != null ?
                new ObjectParameter("OwnerFirstName", ownerFirstName) :
                new ObjectParameter("OwnerFirstName", typeof(string));
    
            var ownerLastNameParameter = ownerLastName != null ?
                new ObjectParameter("OwnerLastName", ownerLastName) :
                new ObjectParameter("OwnerLastName", typeof(string));
    
            var petNameParameter = petName != null ?
                new ObjectParameter("PetName", petName) :
                new ObjectParameter("PetName", typeof(string));
    
            var checkinDateParameter = checkinDate.HasValue ?
                new ObjectParameter("CheckinDate", checkinDate) :
                new ObjectParameter("CheckinDate", typeof(System.DateTime));
    
            var checkoutDateParameter = checkoutDate.HasValue ?
                new ObjectParameter("CheckoutDate", checkoutDate) :
                new ObjectParameter("CheckoutDate", typeof(System.DateTime));
    
            var roomIDParameter = roomID.HasValue ?
                new ObjectParameter("RoomID", roomID) :
                new ObjectParameter("RoomID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateBooking", ownerFirstNameParameter, ownerLastNameParameter, petNameParameter, checkinDateParameter, checkoutDateParameter, roomIDParameter);
        }
    }
}
